shell -/bin/bash

# change the default meta character to ctrl-s
escape ^Ss

startup_message off
nethack on
vbell off

# disable ctrl-s (flow control)
xon off

# keep running processes on detach
autodetach on

# refresh screen after closing a program
altscreen on

# large scrollback buffer
defscrollback 20000

# play nice with terminal/console - support 256 colors
term xterm-256color
attrcolor b ".I"
termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E38;5;%dm'
defbce on

# Time in seconds, a message is displayed if screen is not disturbed by other activity.
msgwait 3

# Defines the time, in seconds, that screen delays a new message when one message is currently displayed.
msgminwait 0

# don't break regions-layout after de-, re-attaching a session
layout save default

# Show or set the status of layout saving.
layout autosave on

# get current week number
backtick 100 0 0 sh -c 'date +%V'

# get current ip address
backtick 101 0 0 sh -c 'hostname -i'

# set color of borders and command-line (background, foreground). default is '=s dd'
rendition so = Ky

windowlist title '%{+b .C}   # Window%46= Windowlist %='
windowlist string ' %3n %t'

# default caption line
caption top always
#caption string '%{= Kk}%=%?%P%{+b kG}  **  copy / scroll  **  %:%?%?%E%{+b kR}  **  escape / command  **  %:%?%{= Kk}%='
caption string '%?%E%{= Yk}  **  escape / command  **  %48= %:%?%?%P%{= Gk}  **  copy / scroll  **  %:%?'

# default hardstatus line
hardstatus alwayslastline
#hardstatus string '%6B%232G%{=b } %H %238B%6G%243B%238G%{=}%243B%232G %-w%234B%243G%234B%179G %n  %t %243B%234G%243B%232G%?%+w %238B%243G%=%238B%232G %101` W:%100` %238B%240G%240B%232G %D %240B%243G%243B%232G %d.%m.%Y %243B%71G%71B%232G %c:%s %0B%7G'
hardstatus string '%6B%234G%{=b } %H %238B%6G%243B%238G%243B%234G %-w%234B%243G%234B%179G %n  %t %243B%234G%243B%234G%?%+w %238B%243G%=%238B%234G %101`  W:%100` %238B%240G%240B%234G %D %240B%243G%243B%234G %d.%m.%Y %243B%71G%71B%234G %c:%s %0B%7G'

# remove most default key binds
bind k          # "kill" Kill current window
bind ^k         # "kill" Kill current window
bind .          # "dumptermcap" Write out a .termcap file.
bind ,          # "license" Show the copyright page
bind "'"        # "select" Prompt for a window identifier and switch.
bind '"'        # "select" Prompt for a window identifier and switch.
bind ^\         # "quit" Kill all windows and terminate screen.
bind \\         # "quit" Kill all windows and terminate screen.
bind {          # "history" Copy and paste a previous (command) line
bind }          # "history" Copy and paste a previous (command) line
bind ' '        # "next" space key
bind n          # "next"
bind ^n         # "next"
bind ^@         # "next"
bind p          # "prev"
bind ^p         # "prev"
bind ^?         # "prev"
bind ]          # "paste ."
bind ^]         # "paste ."
bind [          # "enter copy mode"
bind ^[         # "enter copy mode"
bind ^a         # "other" Toggle between this and last selected window.
bind b          # "break" Send a break to the tty.
bind ^b         # "break" Send a break to the tty.
bind B          # "pow_break" Close and reopen the tty-line.
bind C          # "clear" Clears the screen and saves its contents to the scrollback buffer.
bind D          # "pow_detach" Detach and logout.
bind ^d         # "detach"
bind f          # "flow" Cycle flow among on, off or auto.
bind ^f         # "flow" Cycle flow among on, off or auto.
bind ^g         # "vbell"
bind h          # "hardcopy" Write a hardcopy of the current window
bind ^h         # "hardcopy" Write a hardcopy of the current window
bind H          # "log" Toggle logging of the current window to the file screenlog.
bind i          # "info"
bind ^i         # "focus" Switch the input focus to the next region. <TAB>
bind I          # "login on"
bind O          # "login off"
bind l          # "redisplay" Fully refresh the current window.
bind ^l         # "redisplay" Fully refresh the current window.
bind L          # "login" Toggle the current window's login state.
bind N          # "number" Show the number (and title) of the current window.
bind M          # "monitor" Toggle monitoring of the current window.
bind m          # "lastmsg" Repeat the last message displayed in the message line.
bind ^m         # "lastmsg" Repeat the last message displayed in the message line.
bind Q          # "only" Delete all regions but the current one.
bind q          # "xon"
bind ^q         # "xon"
bind r          # "wrap" Toggle the current window's line-wrap setting.
bind ^r         # "wrap" Toggle the current window's line-wrap setting.
bind s          # "xoff"
bind ^s         # "xoff"
bind S          # "split" horizontally
bind t          # "time" Show current time.
bind ^t         # "time" Show current time.
bind ^v         # "digraph" Enter digraph.
bind v          # "version" Display the version and modification date in the message line.
bind w          # disbale default "windows" Show a list of active windows.
bind ^w         # disbale default "windows" Show a list of active windows.
bind W          # "width"
bind x          # "lockscreen" disable
bind ^x         # "lockscreen" disable
bind X          # "lockscreen" disable
bind z          # "suspend"
bind ^z         # "suspend"
bind Z          # "reset" Reset the virtual terminal to its "power-on" values.
bind >          # "writebuf" Write the paste buffer out to the screen-exchange file.
bind <          # "readbuf" Read the screen-exchange file into the paste buffer.
bind =          # "removebuf" Delete the screen-exchange file.
bind *          # "displays" Shows a tabular listing of all currently connected user front-ends (displays).
bind _          # "silence"
bind |          # "split -v" split verically


# custom key bindings. ctrl-a has to be pressed first
bind K kill             # Kill current window
bind w windowlist       # Show a selectable list od all opened windows
bind p paste .          # paste
bind ' ' copy           # enter copy/scroll mode
bind R redisplay        # Fully refresh the current window.
bind Q remove           # Kill the current region.
bind = resize -v -h =   # make all regions equally high

# manage regions/splits
#
# split screen horizontally, switch to new region, open the windowlist and set caption string
#bind s eval "split -h"  "focus" "windowlist" "caption bottom always" "caption string '%{= Kk}%=%?%P%{+b kG}  **  copy / scroll  **  %:%?%?%E%{+b kR}  **  escape / command  **  %:%?%{= Kk}%=%{= kM}%?%F%{+b kR}%:%?%?  %n-%t  '" "hardstatus ignore"
bind s eval "split -h"  "focus" "windowlist" "caption bottom always" "caption string '%?%E%{= Yk}  **  escape / command  **  %48= %:%?%?%P%{= Gk}  **  copy / scroll  **  %:%?%=%{= kM}%?%F%{+b kY}%:%?%?  %n-%t  '" "hardstatus ignore"
# %?%E%{= Yk}  **  escape / command  **  %48= %:%?%?%P%{= Gk}  **  copy / scroll  **  %:%?

# split screen vertically, switch to new region, open the windowlist and set caption string
#bind v eval "split -v"  "focus" "windowlist" "caption bottom always" "caption string '%{= Kk}%=%?%P%{+b kG}  **  copy / scroll  **  %:%?%?%E%{+b kR}  **  escape / command  **  %:%?%{= Kk}%=%{= kM}%?%F%{+b kR}%:%?%?  %n-%t  '" "hardstatus ignore"
bind v eval "split -v"  "focus" "windowlist" "caption bottom always" "caption string '%?%E%{= Yk}  **  escape / command  **  %48= %:%?%?%P%{= Gk}  **  copy / scroll  **  %:%?%=%{= kM}%?%F%{+b kY}%:%?%?  %n-%t  '" "hardstatus ignore"

# close all regions except the current one and set caption string
bind O eval "only"      "caption top always"  "caption string '%?%E%{= Yk}  **  escape / command  **  %48= %:%?%?%P%{= Gk}  **  copy / scroll  **  %:%?'" "hardstatus alwayslastline"


# navigating in regions/split (meta, then key)
bind k focus up        # move one region up
bind j focus down      # move one region down
bind l focus right     # move to right region
bind h focus left      # move to left region


# resizing regions/splits (alt + key)
bindkey "^[k" resize -v +10   # alt-k = make region higher
bindkey "^[j" resize -v -10   # alt-j = make region smaller
bindkey "^[l" resize -h +10   # alt-l = make region wider
bindkey "^[h" resize -h -10   # alt-h = make region thiner

################################################################################
# bindkeys are active without pressing ctrl-a first
#
# To get the right key value:
#   'ctrl-a' then ':'
#   Press your desired key or keys like 'Shift F9'.
#   You get '[33~'. Thats the key value for 'Shift F9'.
#
# These key values have to be escaped in order to use them.
# Escape strings: '\033' or '^['
# Valid key looks like this: "\033[33~" or "^[[33~"
#
# Example of a bindkey:
#
#   bindkey "\033[33~" prev
#
# Keys:
#   [1;2C = shift right
#   [1;2D = shift left
#   [1;5A = ctrl-up
#   [1;5B = ctrl-down
#   [1;5C = ctrl-right
#   [1;5D = ctrl-left
#
################################################################################
#
bindkey -k k1 select 1  #  F1 = screen 1
bindkey -k k2 select 2  #  F2 = screen 2
bindkey -k k3 select 3  #  F3 = screen 3
bindkey -k k4 select 4  #  F4 = screen 4
bindkey -k k5 select 5  #  F5 = screen 5
bindkey -k k6 select 6  #  F6 = screen 6
bindkey -k k7 select 7  #  F7 = screen 7
bindkey -k k8 select 8  #  F8 = screen 8
bindkey -k F1 prev      #  F11 = previous window
bindkey -k F2 next      #  F12 = next window


bindkey -t !god stuff "ssh root@localhost^M"  # make me ROOT

bindkey -t !username stuff "ssh -l gulatows " # ssh as username
bindkey -t !support stuff "ssh -l support "   # ssh as support
bindkey -t !root stuff "ssh -l root "         # ssh as root

bindkey -t !sys1 screen -t sys1 10 ssh user@sys1.hostname.com
bindkey -t !sys2 screen -t msec 10 ssh user@sys2.hostname.com
bindkey -t !sys3 screen -t msec 10 ssh user@sys3.hostname.com
bindkey -t !sys4 screen -t msec 10 ssh user@sys4.hostname.com
bindkey -t !sys5 screen -t msec 10 ssh user@sys5.hostname.com
bindkey -t !sys6 screen -t msec 10 ssh user@sys6.hostname.com
bindkey -t !sys7 screen -t msec 10 ssh user@sys7.hostname.com
bindkey -t !sys8 screen -t msec 10 ssh user@sys8.hostname.com


# The first screen window is 0. If you'd rather never have a window 0 and start instead with 1
bind c screen -t wawa 1
bind ^c screen -t wawa 1
bind 0 select 10

# dynamic window title
shelltitle '$ |wawa'

# screens to open on start

screen -t sys1 1 ssh user@sys1.hostname.com
stuff "cd /tmp^M"  # 'cd /tmp' ausfuehren // ^M=Enter

screen -t sys2 2 ssh user@sys2.hostname.com
screen -t sys3 3 ssh user@sys3.hostname.com
screen -t wawa 4
screen -t wawa 5

# window to be active after screen started
select 4
